jar-tiedosto build/libs kansiossa

Luokista:
Reclab.javasta ei ole mitään iloa
Dst.java on alussa tekemääni koodia, voi katsoa huvin vuoksi mutta sitä ei käytetty lopputuloksessa ollenkaan
Muut luokat ovat käytössä, useimmat aika "optimoituja" eli niissä on vain tarvittavat funktionaalisuudet. Generoimisalgoritmit ovat pääkansiossa, tietorakenteet ja polunetsinnät omissaan.
Ohjelman pitäisi toimia .jar pakettina, mutta minulla on ollut sen kanssa vaikeuksia. Ainakin kloonaamalla pitäisi toimia.
Gradle run aloittaa tekstipohjaisen käyttöliittymän, jossa voi tehdä nopeustestejä erikokoisille labyrinteille, tulostaa generoituja
labyrinttejä sekä luoda annetun kokoisen labyrintin ja löytää sille jokin reitti valitulla algoritmillä.

Labyrintti tulostuu hieman omalaatuisen näköisenä. Sitä voi lukea seuraavasti:
1 on siis solmu, 2 on polkua, 0 estettä ja 9 "filler"-tilaa, jota ei oikeasti ole olemassa mutta jota tarvitaan labyrintin esittämiseen matriisina.
Esim 5x5 labyrintti tulostetaan siis 9x9 matriisina esteiden havainnollistamisen takia.

Labyrintit alkavat vasemmasta ylänurkasta ja loppuvat oikeaan alanurkkaan!

HUOM: Sidewinder-algoritmi ei toimi vielä kunnolla, ja suuret labyrintit luovat todennäköisesti umpikujia. Sen nopeusvertailu ei siis vielä kirjoitushetkellä
(23:18) toimi. Sidewinder on ns. "basic"-algoritmi, joten polunetsintäalgoritmien vertailu siihen ei ole niin tähdellistä.

update:nopeusvertailu toimii jotenkuten muille paitsi BFS:lle, jonka queue menee reilusti yli kapasiteetin jostain syystä. Hyvin moni näistä labyrinteistä päätyy umpikujaan,
mutta silloinkin algoritmit kilpailevat nopeudessa, joten nekään eivät ole täysin turhia.

update: Sidewinder toimii täysin, vika oli muutamasta merkistä kiinni (kuten aina). Generoin 200x200 labyrintin 100 kertaa, ja niille löytyi aina ratkaisu. Myös BFS:n outo Queue-tilaongelma
ratkesi samalla. Nopeusvertailu siis toimii myös.